[project]
name = "graphemy"
version = "1.1.1"
description = "A Python library for integrating SQLModel and Strawberry, providing a seamless GraphQL integration with FastAPI and advanced features for database interactions."
authors = [
    {name = "Matheus Doreto", email = "matheusdoreto.md@gmail.com"},
]
license = {text = "MIT"}
requires-python = "<4.0,>=3.12"
dependencies = [
    "sqlmodel<1.0.0,>=0.0.22",
    "strawberry-graphql[debug-server]<1.0.0,>=0.240.0",
    "fastapi<1.0.0,>=0.114.0",
]
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Intended Audience :: Developers",
    "Framework :: FastAPI",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
]

[project.urls]
Documentation = "https://graphemy.readthedocs.io/en/latest/"
Repository = "https://github.com/MDoreto/graphemy"
"Bug Tracker" = "https://github.com/MDoreto/graphemy/issues"
homepage = "https://github.com/MDoreto/graphemy"
repository = "https://github.com/MDoreto/graphemy"
documentation = "https://graphemy.readthedocs.io/en/latest/"

[dependency-groups]
dev = [
    "pytest-cov<5.0.0,>=4.1.0",
    "isort<6.0.0,>=5.12.0",
    "taskipy<2.0.0,>=1.12.0",
    "httpx==0.27.2",
    "pytest-env<2.0.0,>=1.1.1",
    "aiosqlite<1.0.0,>=0.20.0",
    "gevent<25.0.0,>=24.2.1",
    "fastapi-cli<1.0.0,>=0.0.5",
    "pytest<9.0.0,>=8.3.3",
    "pytest-asyncio==0.21.2",
    "ruff>=0.8.2",
]
doc = [
    "mkdocs-material<10.0.0,>=9.4.7",
    "mkdocs-macros-plugin<2.0.0,>=1.0.5",
    "jinja2<4.0.0,>=3.1.2",
    "mdx-include<2.0.0,>=1.4.2",
    "mkdocstrings<1.0.0,>=0.26.1",
    "mkdocstrings-python<2.0.0,>=1.11.1",
]

[tool.pdm.build]
includes = ["graphemy"]
source-includes = [
    "tests/",
    "examples/",
    ]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pytest.ini_options]
pythonpath = "."

[tool.coverage.run]
concurrency = ["thread","gevent"]

[tool.isort]
profile = "black"
line_length = 79

[tool.taskipy.tasks]
ex_basic = "fastapi dev examples/tutorial/basic/main.py"
ex_dl = "fastapi dev examples/tutorial/relationship/main.py"
lint = "ruff format && ruff check --fix"
docs = "mkdocs serve"
pre_test = "task lint"
test = "pytest -s -x --cov=graphemy -vv -W ignore::DeprecationWarning"
post_test = "coverage html"
pre_publish = "task lint"
publish = "uv build && uv publish"


[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    ]

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79
exclude = ["tests"]

[tool.ruff.lint]
select = [
    "ALL"
]

ignore = [
    "E501",  # line too long, handled by black
    "D", # Docstrings
    "C90", # function is too complex
    "PLR0913", # Too many arguments in function definition
    "INP001",  # init file
]